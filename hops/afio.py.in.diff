--- afio.py.in	2017-10-25 23:50:02.000000000 -0700
+++ new-afio.py.in	2018-09-17 20:55:24.000000000 -0700
@@ -328,26 +328,32 @@
 ]

 def afio_load():
+    # Default installation location
+    paths = ['@prefix@/lib']
+
+    # Construct path from HOPS environment variables
     root = getenv('HOPS_ROOT')
     arch = getenv('HOPS_ARCH')
-    if (root is None) or (arch is None):
-        #hops env not set up yet, need to find the library using LD_LIBRARY_PATH
-        ld_lib_path = getenv('LD_LIBRARY_PATH')
-        if ld_lib_path is None:
-            return None #we failed
-        possible_path_list = ld_lib_path.split(':')
-        for a_path in possible_path_list:
-            libpath = '/'.join([a_path,'libmk4io@HOPSPYSHLEXT@'])
-            if os.path.isfile(libpath):
-                #found the library, go ahead and load it up
-                afio = ctypes.cdll.LoadLibrary(libpath)
-                return afio
-        #otherwise we didn't find the library
-        return None
-    else:
-        path = '/'.join([root,arch,'lib','hops','libmk4io@HOPSPYSHLEXT@'])
-        afio = ctypes.cdll.LoadLibrary(path)
-        return afio
+    if (root is not None) and (arch is not None):
+        paths += [root+'/'+arch+'/lib']
+
+    # need to find the library using LD_LIBRARY_PATH
+    ld_lib_path = getenv('LD_LIBRARY_PATH')
+    if ld_lib_path is not None:
+        paths += ld_lib_path.split(':')
+
+    # Default paths used by ld.so
+    paths += ['/lib', '/usr/lib']
+
+    # Try to load from paths
+    for a_path in paths:
+        libpath = a_path+'/hops/libmk4io.so'
+        if os.path.isfile(libpath):
+            # Found the library, go ahead and load it up
+            return ctypes.cdll.LoadLibrary(libpath)
+
+    # Otherwise, we didn't find the library
+    return None

 def alist(filename):
     alist_file = afile_structure()
